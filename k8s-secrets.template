# Kubernetes Secrets Template
# Create these secrets before applying the deployment

# 1. AWS Credentials Secret
# First, create the actual credentials file from the template:
# cp aws-credentials.template aws-credentials
# Edit aws-credentials with your actual AWS keys
# Then create the secret:
kubectl create secret generic aws-credentials \
  --from-file=credentials=./aws-credentials \
  --from-file=config=./aws-config

# 2. ECR Registry Secret (for pulling images from ECR)
# Get ECR login token and create secret
AWS_ACCOUNT_ID="766670502987"
AWS_REGION="ap-southeast-1"
ECR_REGISTRY="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"

# Get ECR login password
TOKEN=$(aws ecr get-login-password --region ${AWS_REGION})

# Create docker registry secret
kubectl create secret docker-registry ecr-registry-secret \
  --docker-server=${ECR_REGISTRY} \
  --docker-username=AWS \
  --docker-password=${TOKEN} \
  --docker-email=your-email@example.com

# 3. TLS Certificate Secret (for HTTPS)
# Replace with your actual certificate files
kubectl create secret tls booking-api-tls \
  --cert=path/to/your/certificate.crt \
  --key=path/to/your/private.key

# Or if using cert-manager with Let's Encrypt:
# The TLS secret will be created automatically by cert-manager
# Add this annotation to your ingress:
# cert-manager.io/cluster-issuer: "letsencrypt-prod"

# Note: ECR tokens expire every 12 hours, consider using a token refresh mechanism

# 3. Alternative: Create secrets from YAML files
---
apiVersion: v1
kind: Secret
metadata:
  name: aws-credentials
  namespace: default
type: Opaque
data:
  # Base64 encoded AWS credentials file content
  credentials: UkVQTEFDRV9XSVRIX1lPVVJfQkFTRTY0X0VOQ09ERURfQ1JFREVOVElBTFNfRklMRQ==
  # Base64 encoded AWS config file content  
  config: UkVQTEFDRV9XSVRIX1lPVVJfQkFTRTY0X0VOQ09ERURfQ09ORklHX0ZJTEU=

---
apiVersion: v1
kind: Secret
metadata:
  name: ecr-registry-secret
  namespace: default
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: UkVQTEFDRV9XSVRIX1lPVVJfQkFTRTY0X0VOQ09ERURfRE9DS0VSX0NPTkZJRw==